repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    // TODO
    maven {
        name = "Mod Maven" // AA
        url = "https://modmaven.k-4u.nl/"
    }
    maven {
        name "IC2" // IC2, Forestry
        url "https://maven.ic2.player.to/"
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }

    // CF dep
    api rfg.deobf('curse.maven:AE2Unofficial-570458:4724395') // v0.55.22
    api rfg.deobf('curse.maven:RefinedStorage-243076:2940914') // v1.6.16

    implementation ('curse.maven:RedstoneFlux-270789:2920436') // 2.1.1.1-universal
    implementation ('curse.maven:Chisel_CTM-267602:2809915') // 1.0.0.29

    compileOnly rfg.deobf('curse.maven:Chisel_CTM-267602:2809916') // 1.0.0.29-api
    compileOnly rfg.deobf('curse.maven:SimpleStorageNetwork-268495:3655827') // 1.8.3
    compileOnly rfg.deobf('curse.maven:CoFHCore-69162:2920433') // 4.6.6.1-universal
    compileOnly rfg.deobf('curse.maven:ImmersiveEngineering-231951:2974106') // 0.12-98
    compileOnly rfg.deobf('curse.maven:IndustrialCraft2-242638:3838715') // 2.8.222-ex112-api
    compileOnly rfg.deobf('curse.maven:Mekanism-268560:2835175') // 9.8.3.390
    compileOnly rfg.deobf('curse.maven:Cyclic-239286:4075832') // 1.20.14

    // Non CF dep
    compileOnly rfg.deobf('de.ellpeck.actuallyadditions:ActuallyAdditions:1.12.2-r144:api')
    compileOnly rfg.deobf("net.sengir.forestry:forestry_1.12.2:5.8.2.394:api")

    testImplementation ('org.junit.jupiter:junit-jupiter-api:5.4.0')
}